# print-env:
#   stage: test
#   script:
#     - echo "Các biến CI/CD có sẵn:"
#     - printenv | sort
#   tags:
#     - shell
stages:
  # - build
  - deploy

variables:
  IMAGE_TAG: "$DOCKERHUB_USERNAME/management-fe:$CI_COMMIT_SHORT_SHA"
  RELEASE_NAME: management-fe
  HELM_CHART_PATH: ./helm-chart/management-FE
  KUBE_CONTEXT: gitlab-context

# build-and-push:
#   stage: build
#   image: docker:20.10.16
#   services:
#     - name: docker:20.10.16-dind
#       alias: docker
#   before_script:
#     - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
#   script:
#     - docker build -t "$IMAGE_TAG" .
#     - docker push "$IMAGE_TAG"

deploy:
  stage: deploy
  image:
    name: alpine/helm:3.14.0
    entrypoint: [""]
  script:
    - echo "$KUBE_CA_PEM" > ca.crt

    # Cấu hình kubeconfig để kết nối cụm K8s
    - kubectl config set-cluster k8s-cluster --server=$KUBE_API --certificate-authority=ca.crt --embed-certs=true

    - kubectl config set-credentials deployer --token=$KUBE_TOKEN
    - kubectl config set-context $KUBE_CONTEXT \
        --cluster=k8s-cluster \
        --user=deployer \
        --namespace=$KUBE_NAMESPACE
    - kubectl config use-context $KUBE_CONTEXT

    # Deploy Helm chart, dùng Docker Hub image
    - helm upgrade --install $RELEASE_NAME $HELM_CHART_PATH \
        --namespace $KUBE_NAMESPACE \
        --set image.repository=$DOCKERHUB_USERNAME/management-fe \
        --set image.tag=$CI_COMMIT_SHORT_SHA \
        --atomic
  # only:
  #   - main
